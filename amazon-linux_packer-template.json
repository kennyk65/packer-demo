{
    "variables": {
        "aws_region": "{{env `AWS_REGION`}}",
        "result_ami_name": "my-amazon-linux"
    },
    "builders": [{
        "type": "amazon-ebs",
        "region": "{{user `aws_region`}}",
        "instance_type": "t3.micro",
        "ssh_username": "ec2-user",
        "ami_name": "{{user `result_ami_name`}}",
        "ami_description": "Customized Amazon Linux with Spring Environment demo installed",
        "associate_public_ip_address": "true",
        "source_ami_filter": {
            "filters": {
                "virtualization-type": "hvm",
                "name": "amzn2-ami-hvm-*",
                "root-device-type": "ebs"
            },
            "owners": ["self", "amazon", "aws-marketplace"],
            "most_recent": true
        }        
    }],
    "provisioners": [
        {
            "type": "shell",
            "inline": [
                "sudo yum update -y"
                "sudo yum install wget java-1.8.0 -y"
                "wget https://kk-uploads-oregon.s3.amazonaws.com/spring-cloud-aws-environment-demo-1.war"
                "mv spring-cloud-aws-environment-demo-1.war  app.war"
                "sudo chmod +x app.war"
                "sudo mkdir /var/app"
                "sudo mv app.war /var/app"
                "sudo cat > app.service <<EOF
                "[Unit]"
                "Description=Spring Boot Demo"
                "[Service]"
                "SuccessExitStatus=143"
                "TimeoutStartSec=30"
                "TimeoutStopSec=10"
                "Restart=on-failure"
                "RestartSec=5"
                "ExecStart=/usr/bin/java -jar /var/app/app.war --server.port=80"
                "[Install]"
                "WantedBy=multi-user.target"
                "EOF"
                "sudo mv app.service /etc/systemd/system/"
                "sudo systemctl daemon-reload"
                "sudo systemctl enable app.service"
                "sudo systemctl start app"
            ]
        }
    ]
}
